# This is a basic workflow to help you get started with Actions

name: merge

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
    # branches: [ "main" ]
  pull_request:
    types: [ "closed" ]
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # - name: sleep time
      #   run: |
      #     sleep 30

      # Runs a single command using the runners shell
      - name: print shit
        run: |
          echo "event_type: ${{ github.event_name }}"
          echo "pr_merged? ${{ github.event.pull_request.merged }}"
          echo "ref: ${{ github.ref }}"
          echo "ref_name: ${{ github.ref_name }}"
          echo "workflow_ref: ${{ github.workflow_ref }}"
          echo "job_workflow_ref: ${{ github.job_workflow_ref }}"
          echo "base_ref: ${{ github.base_ref }}"
          echo "head_ref: ${{ github.head_ref }}"
          echo "sha: ${{ github.sha }}"

  check_shit:
    runs-on: ubuntu-latest
    steps:
      - uses: dorny/paths-filter@v2
        id: changed
        with:
          filters: |
            events: 'migrations/events/**'
            orion: 'migrations/orion/**'
            nebula: 'migrations/nebula/**'
    outputs:
      dbs: ${{ steps.changed.outputs.changes }}

  # some comments
  run-matrix:
    needs: check_shit
    runs-on: ubuntu-latest
    if: ${{ needs.check_shit.outputs.dbs != '[]' && needs.check_shit.outputs.dbs != '' }}
    strategy:
      matrix:
        db: ${{ fromJson(needs.check_shit.outputs.dbs) }}
        env: [ "dev", "stg"]
    steps:
      - name: print matrix
        run: |
          echo "matrix: ${{ matrix.db }} - ${{ matrix.env }}"


